{
    "consign.service.ConsignServiceImpl.queryByAccountId":{
        "input": "String accountId, String authorization",
        "output": "Response<>(1, Find consign by account id success, List<ConsignRecord {\n\n    @Id\n    @Column(name = \"consign_record_id\")\n    private String id;\n    private String orderId;\n    @Column(name = \"user_id\")\n    private String accountId;\n    private String handleDate;\n    private String targetDate;\n    @Column(name = \"from_place\")\n    private String from;\n    @Column(name = \"to_place\")\n    private String to;\n    private String consignee;\n    @Column(name = \"consign_record_phone\")\n    private String phone;\n    private double weight;\n    @Column(name = \"consign_record_price\")\n    private double price;\n\n)>)"
    },
    "travelplan.service.TravelPlanServiceImpl.getCheapest":{
        "input": "String accountId",
        "output": "arr<Contacts {\n\n        @Id\n    //    private UUID id;\n        @GeneratedValue(generator = \"jpa-uuid\")\n        @Column(length = 36)\n        private String id;\n        @Column(name = \"account_id\")\n        private String accountId;\n    \n        private String name;\n        @Column(name = \"document_type\")\n        private int documentType;\n        @Column(name = \"document_number\")\n        private String documentNumber;\n        @Column(name = \"phone_number\")\n        private String phoneNumber;>\n    }"
    },
    "travelplan.service.TravelPlanServiceImpl.getMinStation":{
        "input": "String accountId",
        "output": "arr<Contacts {\n\n        @Id\n    //    private UUID id;\n        @GeneratedValue(generator = \"jpa-uuid\")\n        @Column(length = 36)\n        private String id;\n        @Column(name = \"account_id\")\n        private String accountId;\n    \n        private String name;\n        @Column(name = \"document_type\")\n        private int documentType;\n        @Column(name = \"document_number\")\n        private String documentNumber;\n        @Column(name = \"phone_number\")\n        private String phoneNumber;>\n    }"
    },
    "verifycode.service.impl.VerifyCodeServiceImpl.getImageCode":{
        "input": "int 60, int 20, String os, String headers, String cookie, String request",
        "output": "image"
    },
    "execute.service.ExecuteServiceImpl.ticketCollect":{
        "input": "String orderId, String authorization",
        "output": "Response<>(1, Success., null)"
    },
    "travelplan.service.TravelPlanServiceImpl.getQuickest":{
        "input": "String orderId",
        "output": "Response<>(1, Success., null)"
    },
    "execute.service.ExecuteServiceImpl.ticketExecute":{
        "input": "String orderId, String authorization",
        "output": "Response<>(1, Success, null)"
    },
    "consign.service.ConsignServiceImpl.queryByOrderId":{
        "input": "UUID orderId, String authorization",
        "output": "Response<>(1, Find consign by order id success, ConsignRecord {\n\n    @Id\n    @Column(name = \"consign_record_id\")\n    private String id;\n    private String orderId;\n    @Column(name = \"user_id\")\n    private String accountId;\n    private String handleDate;\n    private String targetDate;\n    @Column(name = \"from_place\")\n    private String from;\n    @Column(name = \"to_place\")\n    private String to;\n    private String consignee;\n    @Column(name = \"consign_record_phone\")\n    private String phone;\n    private double weight;\n    @Column(name = \"consign_record_price\")\n    private double price;\n\n))"
    },
    "cancel.service.CancelServiceImpl.calculateRefund":{
        "input": "String orderId, String authorization",
        "output": "Response<>(1, Success, string Refund"
    },
    "cancel.service.CancelServiceImpl.cancel":{
        "input": "String accountId, String headers",
        "output": "arr<Contacts {\n\n        @Id\n    //    private UUID id;\n        @GeneratedValue(generator = \"jpa-uuid\")\n        @Column(length = 36)\n        private String id;\n        @Column(name = \"account_id\")\n        private String accountId;\n    \n        private String name;\n        @Column(name = \"document_type\")\n        private int documentType;\n        @Column(name = \"document_number\")\n        private String documentNumber;\n        @Column(name = \"phone_number\")\n        private String phoneNumber;>\n    }"
    },
    "user.service.impl.UserServiceImpl.getAllUsers":{
        "input": "String authorization",
        "output": "List<User>"
    },
    "contacts.service.ContactsServiceImpl.findContactsByAccountId":{
        "input": "String accountId, String authorization",
        "output": "arr<Contacts {\n\n        @Id\n    //    private UUID id;\n        @GeneratedValue(generator = \"jpa-uuid\")\n        @Column(length = 36)\n        private String id;\n        @Column(name = \"account_id\")\n        private String accountId;\n    \n        private String name;\n        @Column(name = \"document_type\")\n        private int documentType;\n        @Column(name = \"document_number\")\n        private String documentNumber;\n        @Column(name = \"phone_number\")\n        private String phoneNumber;>\n    }"
    },
    "foodsearch.service.FoodServiceImpl.getAllFood":{
        "input": "String authorization",
        "output": "List<FoodDeliveryOrder {\n\n        @Id\n        @GeneratedValue(generator = \"jpa-uuid\")\n        @Column(length = 36)\n        private String id;\n    \n        private String stationFoodStoreId;\n    \n        @ElementCollection(targetClass = Food.class)\n        private List<Food> foodList;\n    \n        private String tripId;\n    \n        private int seatNo;\n    \n        private String createdTime;\n    \n        private String deliveryTime;\n    \n        private double deliveryFee;\n    }>"
    },
    "assurance.service.AssuranceServiceImpl.getAllAssuranceTypes":{
        "input": "String accountId, String authorization",
        "output": "List<{\n    /**\n     * index of assurance type\n     */\n    private int index;\n\n    /**\n     * the assurance type name\n     */\n    private String name;\n\n    /**\n     * the price of this type of assurance\n     */\n    private double price;\n}>\n    }"
    }
}